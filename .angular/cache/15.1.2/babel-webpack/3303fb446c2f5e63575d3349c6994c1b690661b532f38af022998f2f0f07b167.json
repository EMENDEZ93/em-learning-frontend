{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport { Registrer } from '../login/register';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./registrer.service\";\nimport * as i3 from \"@angular/router\";\nexport let RegistrerComponent = /*#__PURE__*/(() => {\n  class RegistrerComponent {\n    constructor(fb, registerServices, router) {\n      this.fb = fb;\n      this.registerServices = registerServices;\n      this.router = router;\n    }\n    ngOnInit() {\n      this.registrerFormGroup = this.fb.group({\n        nombre: ['', Validators.required],\n        correo: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n    crearusuario() {\n      if (this.registrerFormGroup.invalid) return;\n      Swal.fire({\n        title: 'Auto close alert!',\n        didOpen: () => {\n          Swal.showLoading();\n        }\n      });\n      const {\n        nombre,\n        correo,\n        password\n      } = this.registrerFormGroup.value;\n      this.registerServices.crearUsuario(nombre, correo, password).then(informacion => {\n        console.log(informacion.user.uid);\n        var perfil = new Registrer(informacion.user.uid, correo, password);\n        this.registerServices.register(perfil).subscribe();\n        Swal.close();\n        this.router.navigate(['/login']);\n      }).catch(error => {\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: error.message,\n          footer: '<a href=\"\">Why do I have this issue?</a>'\n        });\n      });\n    }\n    login() {\n      this.router.navigate(['/login']);\n    }\n  }\n  RegistrerComponent.ɵfac = function RegistrerComponent_Factory(t) {\n    return new (t || RegistrerComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.RegistrerService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  RegistrerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistrerComponent,\n    selectors: [[\"app-registrer\"]],\n    decls: 24,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"fname\"], [\"type\", \"text\", \"formControlName\", \"nombre\"], [\"for\", \"lname\"], [\"type\", \"text\", \"formControlName\", \"correo\"], [\"type\", \"text\", \"formControlName\", \"password\"], [\"type\", \"submit\", 3, \"disabled\"], [3, \"click\"]],\n    template: function RegistrerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"registrer works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function RegistrerComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.crearusuario();\n        });\n        i0.ɵɵelementStart(3, \"label\", 1);\n        i0.ɵɵtext(4, \"Nombre:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\")(6, \"input\", 2)(7, \"br\");\n        i0.ɵɵelementStart(8, \"label\", 3);\n        i0.ɵɵtext(9, \"Correo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"br\")(11, \"input\", 4)(12, \"br\")(13, \"br\");\n        i0.ɵɵelementStart(14, \"label\", 3);\n        i0.ɵɵtext(15, \"Contrase\\u00F1a:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"br\")(17, \"input\", 5)(18, \"br\")(19, \"br\");\n        i0.ɵɵelementStart(20, \"button\", 6);\n        i0.ɵɵtext(21, \"Click Me!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function RegistrerComponent_Template_button_click_22_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(23, \"Login!\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.registrerFormGroup);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"disabled\", ctx.registrerFormGroup.invalid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return RegistrerComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}