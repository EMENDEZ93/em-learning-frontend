{"ast":null,"code":"import { InformacionPresentVerbService } from './informacion-present-verb.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst TOKEN_KEY = 'TokenAutorizacion';\nconst USUARIO_KEY = 'UsuarioAutenticado';\nconst AUTORIZACIONES_KEY = 'Autorizaciones';\nconst CORREO_KEY = 'Correo';\nexport let InformacionSesionService = /*#__PURE__*/(() => {\n  class InformacionSesionService extends InformacionPresentVerbService {\n    constructor(router) {\n      super();\n      this.router = router;\n      this.roles = [];\n    }\n    cerrarSession() {\n      window.sessionStorage.clear();\n    }\n    guardarToken(token) {\n      window.sessionStorage.removeItem(TOKEN_KEY);\n      window.sessionStorage.setItem(TOKEN_KEY, token);\n    }\n    obtenerToken() {\n      return sessionStorage.getItem(TOKEN_KEY);\n    }\n    guardarUsuario(usuario) {\n      window.sessionStorage.removeItem(USUARIO_KEY);\n      window.sessionStorage.setItem(USUARIO_KEY, usuario);\n    }\n    obtenerUsuario() {\n      return sessionStorage.getItem(USUARIO_KEY);\n    }\n    guardarAutorizaciones(autorizaciones) {\n      window.sessionStorage.removeItem(AUTORIZACIONES_KEY);\n      window.sessionStorage.setItem(AUTORIZACIONES_KEY, JSON.stringify(autorizaciones));\n    }\n    obtenerAutorizaciones() {\n      this.roles = [];\n      if (sessionStorage.getItem(TOKEN_KEY)) {\n        JSON.parse(sessionStorage.getItem(AUTORIZACIONES_KEY)).forEach(autorizacion => {\n          this.roles.push(autorizacion.autorizacion);\n        });\n      }\n      return this.roles;\n    }\n    requiereIniciarSesion() {\n      //if(!this.obtenerToken()){\n      //  this.router.navigate(['/login']);\n      //}  \n    }\n    guardarCorreo(correo) {\n      window.sessionStorage.removeItem(CORREO_KEY);\n      window.sessionStorage.setItem(CORREO_KEY, correo);\n    }\n    obtenerCorreo() {\n      return sessionStorage.getItem(CORREO_KEY);\n    }\n  }\n  InformacionSesionService.ɵfac = function InformacionSesionService_Factory(t) {\n    return new (t || InformacionSesionService)(i0.ɵɵinject(i1.Router));\n  };\n  InformacionSesionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InformacionSesionService,\n    factory: InformacionSesionService.ɵfac,\n    providedIn: 'root'\n  });\n  return InformacionSesionService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}