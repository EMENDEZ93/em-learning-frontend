{"ast":null,"code":"import { Opcion } from './opcion';\nimport { DatePipe } from '@angular/common';\nimport { actualizarHoja } from '../dominio/usuario/usuario.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./present-verb.service\";\nimport * as i3 from \"../comun/audio/audio.service\";\nimport * as i4 from \"@ngrx/store\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/material/sidenav\";\nconst _c0 = [\"formulario\"];\nconst _c1 = [\"verboEntradaInput\"];\nfunction PresentVerbComponent_div_4_form_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 11)(1, \"mat-form-field\", 13)(2, \"input\", 25);\n    i0.ɵɵlistener(\"ngModelChange\", function PresentVerbComponent_div_4_form_7_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.palabraActual = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.palabraActual);\n  }\n}\nfunction PresentVerbComponent_div_4_div_14_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function PresentVerbComponent_div_4_div_14_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r15);\n      const option_r12 = restoredCtx.$implicit;\n      const ctx_r14 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r14.validarTraductorSeleccionado(option_r12.valido));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r12 = ctx.$implicit;\n    const indexOfelement_r13 = ctx.index;\n    i0.ɵɵpropertyInterpolate(\"id\", indexOfelement_r13 + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", indexOfelement_r13 + 1, \". \", option_r12.descripcion, \"\");\n  }\n}\nfunction PresentVerbComponent_div_4_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, PresentVerbComponent_div_4_div_14_button_1_Template, 2, 3, \"button\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.opciones);\n  }\n}\nfunction PresentVerbComponent_div_4_div_15_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function PresentVerbComponent_div_4_div_15_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r20);\n      const option_r17 = restoredCtx.$implicit;\n      const ctx_r19 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r19.validarTraductorSeleccionado(option_r17.valido));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r17 = ctx.$implicit;\n    const indexOfelement_r18 = ctx.index;\n    i0.ɵɵpropertyInterpolate(\"id\", indexOfelement_r18 + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", indexOfelement_r18 + 1, \". \", option_r17.descripcion, \"\");\n  }\n}\nfunction PresentVerbComponent_div_4_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, PresentVerbComponent_div_4_div_15_button_1_Template, 2, 3, \"button\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.opciones);\n  }\n}\nfunction PresentVerbComponent_div_4_option_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r22 = ctx.index;\n    i0.ɵɵproperty(\"value\", i_r22);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i_r22 + 1);\n  }\n}\nfunction PresentVerbComponent_div_4_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.palabraActual);\n  }\n}\nconst _c2 = function (a0) {\n  return {\n    width: a0\n  };\n};\nconst _c3 = function () {\n  return [];\n};\nfunction PresentVerbComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"div\", 6)(3, \"div\", 7)(4, \"div\", 8)(5, \"div\", 9);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(7, PresentVerbComponent_div_4_form_7_Template, 3, 1, \"form\", 10);\n    i0.ɵɵelementStart(8, \"form\", 11, 12)(10, \"mat-form-field\", 13)(11, \"textarea\", 14, 15);\n    i0.ɵɵlistener(\"input\", function PresentVerbComponent_div_4_Template_textarea_input_11_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext();\n      ctx_r23.validarVerboEntredaConVerboRutina($event.target.value);\n      return i0.ɵɵresetView(ctx_r23.colorSegunValidacion($event.target.value));\n    })(\"ngModelChange\", function PresentVerbComponent_div_4_Template_textarea_ngModelChange_11_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r25 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r25.verboEntrada = $event);\n    });\n    i0.ɵɵtext(13, \" \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(14, PresentVerbComponent_div_4_div_14_Template, 2, 1, \"div\", 16);\n    i0.ɵɵtemplate(15, PresentVerbComponent_div_4_div_15_Template, 2, 1, \"div\", 16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 6)(17, \"div\", 7)(18, \"nav\", 17)(19, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function PresentVerbComponent_div_4_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.reproducir());\n    });\n    i0.ɵɵtext(20, \" * Reproducir *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"div\", 19)(22, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function PresentVerbComponent_div_4_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r27.reproducirSiguientePalabra());\n    });\n    i0.ɵɵtext(23, \"Reproducir\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"select\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function PresentVerbComponent_div_4_Template_select_ngModelChange_24_listener($event) {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r28.cantidadVerbosReproducir = $event);\n    });\n    i0.ɵɵtemplate(25, PresentVerbComponent_div_4_option_25_Template, 2, 2, \"option\", 21);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"button\", 0);\n    i0.ɵɵlistener(\"click\", function PresentVerbComponent_div_4_Template_button_click_26_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r29.mostrarSiguientePalabra());\n    });\n    i0.ɵɵtext(27, \"* Ayuda Siguietne Palabra*\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function PresentVerbComponent_div_4_Template_button_click_28_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r30.mostrarAyuda());\n    });\n    i0.ɵɵtext(29, \"* Ayuda *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function PresentVerbComponent_div_4_Template_button_click_30_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r31.spelling());\n    });\n    i0.ɵɵtext(31, \"* Spelling *\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵtemplate(32, PresentVerbComponent_div_4_div_32_Template, 3, 1, \"div\", 24);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(13, _c2, ctx_r0.barraProgreso + \"%\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.barraProgreso, \"% \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.activarAyuda);\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassMapInterpolate1(\"form-control \", ctx_r0.colorSegunValidacionClass, \"\");\n    i0.ɵɵproperty(\"readonly\", !ctx_r0.editable)(\"ngModel\", ctx_r0.verboEntrada);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showOptions == true && !ctx_r0.usuario.sistema.hojaSeleccionado.rutina.orden);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showOptions == true && ctx_r0.usuario.sistema.hojaSeleccionado.rutina.orden);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.cantidadVerbosReproducir);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(15, _c3).constructor(ctx_r0.numeroPalabras));\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.activarAyuda);\n  }\n}\nfunction PresentVerbComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"La Rutina no tiene verbos por repasar-> \", ctx_r1.hoyYaRealizoAprender, \"\");\n  }\n}\nexport let PresentVerbComponent = /*#__PURE__*/(() => {\n  class PresentVerbComponent {\n    constructor(http, presentVerbService, audioService, store) {\n      this.http = http;\n      this.presentVerbService = presentVerbService;\n      this.audioService = audioService;\n      this.store = store;\n      this.hojaActual = \"\";\n      this.barraProgreso = 0;\n      this.colorBarraProgreso = 'alert alert-danger';\n      this.colorSegunValidacionClass = 'border border-primary validacionVacia';\n      this.cantidadVerbosReproducir = 0;\n      this.patt1 = /\\w+/g;\n      this.hoyYaRealizoAprender = true;\n      this.numeroPalabras = 0;\n      this.editable = true;\n      this.showOptions = false;\n      this.opciones = [];\n      this.activarAyuda = false;\n      this.palabraActual = '';\n    }\n    ngOnInit() {}\n    obtenerRutina() {\n      this.obtenerRutinaDos(true);\n      console.log(\" obtenerRutinaDos \");\n    }\n    obtenerRutinaDos(state) {\n      this.store.select('usuario').subscribe(usuario => {\n        this.usuario = usuario;\n        this.activarAyuda = false;\n        if (usuario.sistema.accion === \"rutina\") {\n          if (this.isEmpty(this.usuario.sistema.hojaSeleccionado.rutina) || this.hojaActual !== usuario.sistema.hojaSeleccionado.nombre) {\n            this.presentVerbService.getFilasRutina(usuario.sistema.hojaSeleccionado.id).subscribe(rutina => {\n              this.hojaActual = usuario.sistema.hojaSeleccionado.nombre;\n              rutina.numeroVerbosAprender = rutina.english.length;\n              rutina.indiceVerboRetrocesoTemporal = 0;\n              rutina.indiceVerboValidar = 0;\n              rutina.indicesVerbosAprendidos = [];\n              rutina.indicesVerbosRepasados = [];\n              rutina.numeroVerbosRutina = rutina.english.length;\n              usuario.sistema.hojaSeleccionado.tipo = \"B\";\n              usuario.sistema.hojaSeleccionado.rutina = rutina;\n              this.barraProgreso = 0;\n              this.hoyYaRealizoAprender = this.ultimaFechaAprendidaEsHoy(usuario.sistema.hojaSeleccionado.ultimaFechaRutina);\n              this.ingresarInformacionRutina();\n              this.getNumeroPalabras();\n            }, error => {});\n          } else {\n            console.log(\"ELSe**************\");\n          }\n        }\n      });\n    }\n    validarVerboEntredaConVerboRutina(verboEntrada) {\n      if (this.estaRutinaCompletada()) {\n        this.actualizarPerfil();\n      } else if (this.esIgualVerbEntradaVerboRutina(verboEntrada)) {\n        if (this.activarAyuda) {\n          setTimeout(() => {\n            this.formulario.resetForm();\n            this.verboEntradaInput.nativeElement.focus();\n          }, 1);\n          this.reproducir();\n          if (this.repeticionesPorAyuda == 5) {\n            this.activarAyuda = false;\n            this.repeticionesPorAyuda = 0;\n            this.continuarSiguienteVerbo();\n            this.getNumeroPalabras();\n            this.completarConOracionAnterior();\n          } else {\n            this.repeticionesPorAyuda++;\n          }\n        } else {\n          this.continuarSiguienteVerbo();\n          this.getNumeroPalabras();\n          this.completarConOracionAnterior();\n        }\n      }\n    }\n    completarConOracionAnterior() {\n      if (this.usuario.sistema.hojaSeleccionado.rutina.orden) {\n        if (this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar > 0) {\n          this.verboEntrada = this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboRetrocesoTemporal - 1];\n        }\n      }\n    }\n    continuarSiguienteVerbo() {\n      this.editable = false;\n      this.showOptions = true;\n      const cuatro = false;\n      let indices = [];\n      while (!cuatro) {\n        let indiceAleatoreo = Math.floor(Math.random() * this.usuario.sistema.hojaSeleccionado.rutina.numeroVerbosRutina) + 0;\n        if (!indices.includes(indiceAleatoreo)) {\n          indices.push(indiceAleatoreo);\n        }\n        if (indices.length == 4) {\n          if (!indices.includes(this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar)) {\n            indices = [];\n          }\n        }\n        if (this.usuario.sistema.hojaSeleccionado.rutina.numeroVerbosRutina < 4 && indices.length == this.usuario.sistema.hojaSeleccionado.rutina.numeroVerbosRutina) {\n          break;\n        }\n        if (indices.length == 4) {\n          break;\n        }\n      }\n      this.opciones = [];\n      indices.forEach(element => {\n        this.opciones.push(new Opcion(this.usuario.sistema.hojaSeleccionado.rutina.spanish[element], element));\n      });\n    }\n    validarTraductorSeleccionado(indiceOpcion) {\n      if (indiceOpcion == this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar) {\n        this.actualizarVerbosAprendidos();\n        this.obtenerIndiceAleatoreo();\n        this.reproducir();\n        this.actualizarBarraProgreso();\n        if (this.estaRutinaCompletada()) {\n          this.actualizarPerfil();\n        }\n        this.editable = true;\n        this.showOptions = false;\n        setTimeout(() => {\n          this.formulario.resetForm();\n          this.verboEntradaInput.nativeElement.focus();\n        }, 1);\n      }\n    }\n    handleKeyboardEvent(event) {\n      this.key = event.key;\n      if (this.showOptions) {\n        document.getElementById(event.key).click();\n      }\n      if (this.key === \"Control\") {\n        document.getElementById(event.key).click();\n        console.log(\"zz\");\n      }\n      if (this.key === \"ArrowLeft\") {\n        console.log(this.key);\n      }\n      if (this.key === \"Enter\") {\n        document.getElementById(event.key).click();\n      }\n      if (this.key === \"ArrowDown\") {\n        document.getElementById(event.key).click();\n      }\n      console.log(event.key);\n    }\n    actualizarPerfil() {\n      if (!this.ultimaFechaAprendidaEsHoy(this.usuario.sistema.hojaSeleccionado.ultimaFechaRutina)) {\n        this.presentVerbService.updateRutinaById(this.usuario.sistema.hojaSeleccionado.id).subscribe(hoja => {\n          this.usuario.sistema.hojaSeleccionado = hoja;\n          this.usuario.sistema.hojaSeleccionado.realizadoRutinaHoy = true;\n          this.store.dispatch(actualizarHoja({\n            hojaSeleccionado: this.usuario.sistema.hojaSeleccionado\n          }));\n        }, error => {\n          console.log(error);\n        });\n      } else {\n        console.log(\"Ya esta actualizado [actualizarPerfil]\");\n      }\n    }\n    esIgualVerbEntradaVerboRutina(verboEntrada) {\n      return verboEntrada.toUpperCase() == this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar].toUpperCase();\n    }\n    ingresarInformacionRutina() {\n      this.obtenerIndiceAleatoreo();\n      this.reproducir();\n    }\n    obtenerIndiceAleatoreo() {\n      const existeMasVerbosPorRepasar = true;\n      if (this.usuario.sistema.hojaSeleccionado.rutina.orden) {\n        while (existeMasVerbosPorRepasar) {\n          if (this.estaRutinaCompletada()) {\n            break;\n          }\n          const indiceAleatoreo = this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar++;\n          if (!this.usuario.sistema.hojaSeleccionado.rutina.indicesVerbosRepasados.includes(indiceAleatoreo)) {\n            this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar = indiceAleatoreo;\n            break;\n          }\n        }\n      } else {\n        while (existeMasVerbosPorRepasar) {\n          if (this.estaRutinaCompletada()) {\n            break;\n          }\n          const indiceAleatoreo = Math.floor(Math.random() * this.usuario.sistema.hojaSeleccionado.rutina.numeroVerbosRutina) + 0;\n          if (!this.usuario.sistema.hojaSeleccionado.rutina.indicesVerbosRepasados.includes(indiceAleatoreo)) {\n            this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar = indiceAleatoreo;\n            break;\n          }\n        }\n      }\n    }\n    estaRutinaCompletada() {\n      const rutinaCompletada = Array.from({\n        length: this.usuario.sistema.hojaSeleccionado.rutina.numeroVerbosRutina\n      }, (v, k) => k);\n      const rutinaActual = this.usuario.sistema.hojaSeleccionado.rutina.indicesVerbosRepasados;\n      if (this.isEmpty(rutinaActual)) {\n        return false;\n      }\n      return JSON.stringify(rutinaCompletada.sort()) == JSON.stringify(rutinaActual.sort());\n    }\n    isEmpty(obj) {\n      if (obj === undefined) return true;\n      return Object.keys(obj).length === 0;\n    }\n    actualizarVerbosAprendidos() {\n      this.usuario.sistema.hojaSeleccionado.rutina.indicesVerbosRepasados.push(this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar);\n    }\n    actualizarBarraProgreso() {\n      this.activarAyuda = false;\n      this.barraProgreso = this.usuario.sistema.hojaSeleccionado.rutina.indicesVerbosRepasados.length / this.usuario.sistema.hojaSeleccionado.rutina.numeroVerbosRutina * 100;\n    }\n    reproducir() {\n      if (this.usuario.sistema.accion === \"rutina\" && !this.ultimaFechaAprendidaEsHoy(this.usuario.sistema.hojaSeleccionado.ultimaFechaRutina) && !this.estaRutinaCompletada()) {\n        this.audioService.reproducir(this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar]);\n        console.log(\"Reproduccion:PresentVerbComponente\");\n      }\n      this.getNumeroPalabras();\n    }\n    mostrarAyuda() {\n      if (!this.estaRutinaCompletada()) {\n        this.activarAyuda = true;\n        this.palabraActual = this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar] + \" / \" + this.usuario.sistema.hojaSeleccionado.rutina.spanish[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar];\n        this.repeticionesPorAyuda = 0;\n      }\n    }\n    colorSegunValidacion(verboEntrada) {\n      if (verboEntrada.trim() == \"\") {\n        this.colorSegunValidacionClass = 'border border-primary validacionVacia';\n      } else if (this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar].toUpperCase().includes(verboEntrada.toUpperCase())) {\n        this.colorSegunValidacionClass = 'border border-success validacionExitosa';\n      } else {\n        this.colorSegunValidacionClass = 'border border-danger validacionError';\n      }\n    }\n    reproducirSiguientePalabra() {\n      console.log(\"reproducirSiguientePalabra\");\n      this.audioService.reproducir(this.obtenerSiguientePalabra());\n    }\n    obtenerSiguientePalabra() {\n      var arrayEsperado = this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar].match(this.patt1);\n      var arrayActual = this.verboEntrada == null || this.verboEntrada.trim() == '' ? [''] : this.verboEntrada.match(this.patt1);\n      let i;\n      let verbos = '';\n      for (i = 0; i < arrayEsperado.length; i++) {\n        if (i >= arrayActual.length) {\n          break;\n        }\n        if (arrayEsperado[i].toUpperCase() != arrayActual[i].toUpperCase()) {\n          break;\n        }\n      }\n      for (let x = i; x < parseInt(i) + parseInt(this.cantidadVerbosReproducir.toString()) + 1; x++) {\n        verbos = verbos + arrayEsperado[x] + ' ';\n      }\n      return verbos;\n    }\n    mostrarSiguientePalabra() {\n      console.log(\"mostrarSiguientePalabra\");\n      this.audioService.reproducir(this.palabraActual);\n    }\n    ultimaFechaAprendidaEsHoy(ultimaFechaAprendio) {\n      if (undefined === ultimaFechaAprendio) {\n        return false;\n      }\n      return new Date(this.transformarDate(ultimaFechaAprendio)) >= new Date(this.transformarDate(Date.now()));\n    }\n    transformarDate(date) {\n      return new DatePipe('en-LA').transform(date, 'shortDate');\n    }\n    spelling() {\n      if (this.formulario.form.value[\"in\"] === undefined || this.formulario.form.value[\"in\"] === null || this.formulario.form.value[\"in\"].trim() === '') {\n        let spell = this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar].toUpperCase();\n        if (spell.includes(\" \")) {\n          console.log(\"spelling if\");\n          this.audioService.reproducir(spell.split(' ')[0].split(\"\"));\n        } else {\n          console.log(\"spelling else\");\n          this.audioService.reproducir(spell.split(\"\").toString());\n        }\n      } else {\n        let spell = this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar].toUpperCase().replace(this.formulario.form.value[\"in\"].toUpperCase(), \"\").split(\"\").toString();\n        if (spell.startsWith(\" \")) {\n          spell = spell.substring(2);\n          if (spell.includes(\" \")) {\n            spell = spell.split(', ')[0];\n          }\n        }\n        if (spell.includes(\" \")) {\n          spell = spell.split(', ')[0];\n        }\n        console.log(\"spelling\");\n        this.audioService.reproducir(spell);\n      }\n      this.verboEntradaInput.nativeElement.focus();\n    }\n    getNumeroPalabras() {\n      var arrayEsperado = this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar].match(this.patt1);\n      this.numeroPalabras = arrayEsperado.length;\n    }\n  }\n  PresentVerbComponent.ɵfac = function PresentVerbComponent_Factory(t) {\n    return new (t || PresentVerbComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.PresentVerbService), i0.ɵɵdirectiveInject(i3.AudioService), i0.ɵɵdirectiveInject(i4.Store));\n  };\n  PresentVerbComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PresentVerbComponent,\n    selectors: [[\"app-present-verb\"]],\n    viewQuery: function PresentVerbComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formulario = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.verboEntradaInput = _t.first);\n      }\n    },\n    hostBindings: function PresentVerbComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function PresentVerbComponent_keydown_HostBindingHandler($event) {\n          return ctx.handleKeyboardEvent($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      hojaTemaExcel: \"hojaTemaExcel\",\n      editable: \"editable\",\n      showOptions: \"showOptions\"\n    },\n    decls: 6,\n    vars: 2,\n    consts: [[\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"em-form\"], [\"class\", \"container container-form-em\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"container\", \"container-form-em\"], [1, \"container\"], [1, \"row\"], [1, \"col-sm\"], [1, \"progress\", \"bar-container\"], [\"role\", \"progressbar\", \"aria-valuenow\", \"40\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", \"progress-bar-striped\", \"active\", 2, \"width\", \"40%\", 3, \"ngStyle\"], [\"class\", \"\", 4, \"ngIf\"], [1, \"\"], [\"formulario\", \"ngForm\"], [\"id\", \"verb_input\", 1, \"em-margin-input\", 2, \"width\", \"75%\"], [\"autocomplete\", \"off\", \"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"\", \"name\", \"in\", 3, \"readonly\", \"ngModel\", \"input\", \"ngModelChange\"], [\"verboEntradaInput\", \"\"], [\"class\", \"btn-group-vertical\", \"role\", \"group\", \"aria-label\", \"Vertical button group\", 4, \"ngIf\"], [1, \"em-nav\", \"nav\", \"flex-column\", \"float-right\"], [\"id\", \"Control\", \"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"container-reproducir-siguiente\"], [\"id\", \"exampleFormControlSelect1\", 1, \"verbos-reproducir\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"ArrowDown\", \"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"id\", \"Enter\", \"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"bar-container alert alert-warning\", 4, \"ngIf\"], [\"autocomplete\", \"off\", \"id\", \"entrada\", \"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"\", \"name\", \"in\", \"readonly\", \"\", \"autofocus\", \"\", 1, \"form-control\", 2, \"text-align\", \"center\", \"background-color\", \"#3CBC8D\", 3, \"ngModel\", \"ngModelChange\"], [\"role\", \"group\", \"aria-label\", \"Vertical button group\", 1, \"btn-group-vertical\"], [\"mdbBtn\", \"\", \"type\", \"button\", \"color\", \"amber\", \"class\", \"waves-light ml-0\", \"mdbWavesEffect\", \"\", 3, \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mdbBtn\", \"\", \"type\", \"button\", \"color\", \"amber\", \"mdbWavesEffect\", \"\", 1, \"waves-light\", \"ml-0\", 3, \"id\", \"click\"], [\"mdbBtn\", \"\", \"type\", \"button\", \"color\", \"amber\", \"class\", \"waves-light ml-0\", \"style\", \"width: 75%;\", \"mdbWavesEffect\", \"\", 3, \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mdbBtn\", \"\", \"type\", \"button\", \"color\", \"amber\", \"mdbWavesEffect\", \"\", 1, \"waves-light\", \"ml-0\", 2, \"width\", \"75%\", 3, \"id\", \"click\"], [3, \"value\"], [1, \"bar-container\", \"alert\", \"alert-warning\"]],\n    template: function PresentVerbComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function PresentVerbComponent_Template_button_click_1_listener() {\n          return ctx.obtenerRutina();\n        });\n        i0.ɵɵtext(2, \" Iniciar Rutina \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(3, \"mat-drawer-container\", 1);\n        i0.ɵɵtemplate(4, PresentVerbComponent_div_4_Template, 33, 16, \"div\", 2);\n        i0.ɵɵtemplate(5, PresentVerbComponent_p_5_Template, 2, 1, \"p\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.hoyYaRealizoAprender == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hoyYaRealizoAprender);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i5.NgStyle, i6.MatInput, i7.MatFormField, i8.ɵNgNoValidate, i8.NgSelectOption, i8.ɵNgSelectMultipleOption, i8.DefaultValueAccessor, i8.SelectControlValueAccessor, i8.NgControlStatus, i8.NgControlStatusGroup, i8.NgModel, i8.NgForm, i9.MatDrawerContainer],\n    styles: [\".tp-section[_ngcontent-%COMP%]{display:flex;align-content:center;align-items:center;height:60px}.tp-margin[_ngcontent-%COMP%]{margin:0 10px}.example-form[_ngcontent-%COMP%]{height:149px}.em-tab[_ngcontent-%COMP%]{width:83%}.menu-container[_ngcontent-%COMP%]{width:20%;background-color:#6495ed}.theme[_ngcontent-%COMP%]{color:#fff;background-color:#007bff;border-color:#007bff;width:15%}.bar-container[_ngcontent-%COMP%]{width:75%}.em-margin-input[_ngcontent-%COMP%]{margin-top:20px}.validacionExitosa[_ngcontent-%COMP%]{box-shadow:0 15px 20px #2ee59d66;color:#000;transform:translateY(-7px)}.validacionError[_ngcontent-%COMP%]{box-shadow:0 15px 20px #ffb3b3;color:#000;transform:translateY(-7px)}.validacionVacia[_ngcontent-%COMP%]{box-shadow:0 15px 20px #80bfff;color:#000;transform:translateY(-7px)}.em-nav[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:5px}.mat-tab-list[_ngcontent-%COMP%]{background-color:#007bff!important}.verbos-reproducir[_ngcontent-%COMP%]{width:60px}.container-reproducir-siguiente[_ngcontent-%COMP%]{display:-webkit-inline-box}\"]\n  });\n  return PresentVerbComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}