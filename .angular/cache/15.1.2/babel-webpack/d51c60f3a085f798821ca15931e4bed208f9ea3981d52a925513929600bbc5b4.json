{"ast":null,"code":"import { DatePipe } from \"@angular/common\";\nimport { actualizarHoja } from \"../dominio/usuario/usuario.actions\";\nimport { Usuario } from \"../dominio/usuario/usuario.model\";\nimport { Opcion } from \"../present-verb/opcion\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../present-verb/present-verb.service\";\nimport * as i3 from \"../comun/audio/audio.service\";\nimport * as i4 from \"@ngrx/store\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/material/sidenav\";\nconst _c0 = [\"formulario\"];\nconst _c1 = [\"verboEntradaInput\"];\nfunction SpeakingComponent_div_4_input_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 28);\n    i0.ɵɵlistener(\"ngModelChange\", function SpeakingComponent_div_4_input_9_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r12.usuario.sistema.hojaSeleccionado.rutina.english[ctx_r12.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar] = $event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.usuario.sistema.hojaSeleccionado.rutina.english[ctx_r2.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar]);\n  }\n}\nfunction SpeakingComponent_div_4_div_19_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function SpeakingComponent_div_4_div_19_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const option_r15 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r17.validarTraductorSeleccionado(option_r15.valido));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r15 = ctx.$implicit;\n    const indexOfelement_r16 = ctx.index;\n    i0.ɵɵpropertyInterpolate(\"id\", indexOfelement_r16 + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", indexOfelement_r16 + 1, \". \", option_r15.descripcion, \"\");\n  }\n}\nfunction SpeakingComponent_div_4_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, SpeakingComponent_div_4_div_19_button_1_Template, 2, 3, \"button\", 30);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.opciones);\n  }\n}\nfunction SpeakingComponent_div_4_div_20_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function SpeakingComponent_div_4_div_20_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const option_r20 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r22.validarTraductorSeleccionado(option_r20.valido));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const option_r20 = ctx.$implicit;\n    const indexOfelement_r21 = ctx.index;\n    i0.ɵɵpropertyInterpolate(\"id\", indexOfelement_r21 + 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", indexOfelement_r21 + 1, \". \", option_r20.descripcion, \"\");\n  }\n}\nfunction SpeakingComponent_div_4_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, SpeakingComponent_div_4_div_20_button_1_Template, 2, 3, \"button\", 32);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r6.opciones);\n  }\n}\nfunction SpeakingComponent_div_4_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function SpeakingComponent_div_4_div_22_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r24.startVoiceRecognition());\n    });\n    i0.ɵɵtext(2, \"Record\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SpeakingComponent_div_4_ng_template_23_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r29 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r29.voiceText);\n  }\n}\nfunction SpeakingComponent_div_4_ng_template_23_ng_container_0_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2, \"Listening...\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction SpeakingComponent_div_4_ng_template_23_ng_container_0_ng_template_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Start talking...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SpeakingComponent_div_4_ng_template_23_ng_container_0_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, SpeakingComponent_div_4_ng_template_23_ng_container_0_ng_template_2_ng_container_0_Template, 3, 0, \"ng-container\", 19);\n    i0.ɵɵtemplate(1, SpeakingComponent_div_4_ng_template_23_ng_container_0_ng_template_2_ng_template_1_Template, 2, 0, \"ng-template\", null, 39, i0.ɵɵtemplateRefExtractor);\n  }\n  if (rf & 2) {\n    const _r33 = i0.ɵɵreference(2);\n    const ctx_r31 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r31.voiceActiveSectionListening)(\"ngIfElse\", _r33);\n  }\n}\nfunction SpeakingComponent_div_4_ng_template_23_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, SpeakingComponent_div_4_ng_template_23_ng_container_0_ng_container_1_Template, 3, 1, \"ng-container\", 19);\n    i0.ɵɵtemplate(2, SpeakingComponent_div_4_ng_template_23_ng_container_0_ng_template_2_Template, 3, 2, \"ng-template\", null, 38, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const _r30 = i0.ɵɵreference(3);\n    const ctx_r26 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r26.voiceText)(\"ngIfElse\", _r30);\n  }\n}\nfunction SpeakingComponent_div_4_ng_template_23_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Didn't catch that\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SpeakingComponent_div_4_ng_template_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = i0.ɵɵgetCurrentView();\n    i0.ɵɵtemplate(0, SpeakingComponent_div_4_ng_template_23_ng_container_0_Template, 4, 2, \"ng-container\", 19);\n    i0.ɵɵtemplate(1, SpeakingComponent_div_4_ng_template_23_ng_template_1_Template, 2, 0, \"ng-template\", null, 35, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementStart(3, \"div\")(4, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function SpeakingComponent_div_4_ng_template_23_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r36);\n      const ctx_r35 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r35.closeVoiceRecognition());\n    });\n    i0.ɵɵtext(5, \"Close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 37);\n    i0.ɵɵlistener(\"click\", function SpeakingComponent_div_4_ng_template_23_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r36);\n      const ctx_r37 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r37.startVoiceRecognition());\n    });\n    i0.ɵɵtext(7, \"Restart\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r27 = i0.ɵɵreference(2);\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r9.voiceActiveSectionError)(\"ngIfElse\", _r27);\n  }\n}\nfunction SpeakingComponent_div_4_option_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 40);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r39 = ctx.index;\n    i0.ɵɵproperty(\"value\", i_r39);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i_r39 + 1);\n  }\n}\nfunction SpeakingComponent_div_4_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 41)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r11.palabraActual);\n  }\n}\nconst _c2 = function (a0) {\n  return {\n    width: a0\n  };\n};\nconst _c3 = function () {\n  return [];\n};\nfunction SpeakingComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r41 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"div\", 6)(3, \"div\", 7)(4, \"div\", 8)(5, \"div\", 9);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"form\", 10)(8, \"mat-form-field\", 11);\n    i0.ɵɵtemplate(9, SpeakingComponent_div_4_input_9_Template, 1, 1, \"input\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"form\", 10)(11, \"mat-form-field\", 13)(12, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function SpeakingComponent_div_4_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r40.said = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"form\", 10, 15)(15, \"mat-form-field\", 11)(16, \"textarea\", 16, 17);\n    i0.ɵɵlistener(\"input\", function SpeakingComponent_div_4_Template_textarea_input_16_listener($event) {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r42 = i0.ɵɵnextContext();\n      ctx_r42.validarVerboEntredaConVerboRutina($event.target.value);\n      return i0.ɵɵresetView(ctx_r42.colorSegunValidacion($event.target.value));\n    })(\"ngModelChange\", function SpeakingComponent_div_4_Template_textarea_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r43 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r43.verboEntrada = $event);\n    });\n    i0.ɵɵtext(18, \" \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(19, SpeakingComponent_div_4_div_19_Template, 2, 1, \"div\", 18);\n    i0.ɵɵtemplate(20, SpeakingComponent_div_4_div_20_Template, 2, 1, \"div\", 18);\n    i0.ɵɵelementStart(21, \"div\");\n    i0.ɵɵtemplate(22, SpeakingComponent_div_4_div_22_Template, 3, 0, \"div\", 19);\n    i0.ɵɵtemplate(23, SpeakingComponent_div_4_ng_template_23_Template, 8, 2, \"ng-template\", null, 20, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(25, \"div\", 6)(26, \"div\", 7)(27, \"nav\", 21)(28, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function SpeakingComponent_div_4_Template_button_click_28_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r44 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r44.reproducir());\n    });\n    i0.ɵɵtext(29, \" * Reproducir *\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"div\", 23)(31, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function SpeakingComponent_div_4_Template_button_click_31_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r45 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r45.reproducirSiguientePalabra());\n    });\n    i0.ɵɵtext(32, \"Reproducir\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(33, \"select\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function SpeakingComponent_div_4_Template_select_ngModelChange_33_listener($event) {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r46 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r46.cantidadVerbosReproducir = $event);\n    });\n    i0.ɵɵtemplate(34, SpeakingComponent_div_4_option_34_Template, 2, 2, \"option\", 25);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(35, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function SpeakingComponent_div_4_Template_button_click_35_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r47 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r47.mostrarSiguientePalabra());\n    });\n    i0.ɵɵtext(36, \"* Ayuda Siguietne Palabra*\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function SpeakingComponent_div_4_Template_button_click_37_listener() {\n      i0.ɵɵrestoreView(_r41);\n      const ctx_r48 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r48.mostrarAyuda());\n    });\n    i0.ɵɵtext(38, \"* Ayuda *\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵtemplate(39, SpeakingComponent_div_4_div_39_Template, 3, 1, \"div\", 27);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const _r8 = i0.ɵɵreference(24);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(16, _c2, ctx_r0.barraProgreso + \"%\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.barraProgreso, \"% \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isEmpty(ctx_r0.usuario.sistema.hojaSeleccionado.rutina.english) === false);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.said);\n    i0.ɵɵadvance(4);\n    i0.ɵɵclassMapInterpolate1(\"form-control \", ctx_r0.colorSegunValidacionClass, \"\");\n    i0.ɵɵproperty(\"readonly\", !ctx_r0.editable)(\"ngModel\", ctx_r0.verboEntrada);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showOptions == true && !ctx_r0.usuario.sistema.hojaSeleccionado.rutina.orden);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.showOptions == true && ctx_r0.usuario.sistema.hojaSeleccionado.rutina.orden);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.voiceActiveSectionDisabled)(\"ngIfElse\", _r8);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.cantidadVerbosReproducir);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(18, _c3).constructor(ctx_r0.numeroPalabras));\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.activarAyuda);\n  }\n}\nfunction SpeakingComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"La Rutina no tiene verbos por repasar-> \", ctx_r1.hoyYaRealizoAprender, \"\");\n  }\n}\nexport let SpeakingComponent = /*#__PURE__*/(() => {\n  class SpeakingComponent {\n    constructor(ngZone, http, presentVerbService, audioService, store) {\n      this.ngZone = ngZone;\n      this.http = http;\n      this.presentVerbService = presentVerbService;\n      this.audioService = audioService;\n      this.store = store;\n      this.voiceActiveSectionDisabled = true;\n      this.voiceActiveSectionError = false;\n      this.voiceActiveSectionSuccess = false;\n      this.voiceActiveSectionListening = false;\n      //voiceText: '';\n      this.voiceText = '';\n      this.voiceTextPivot = '';\n      this.said = '';\n      // ************************\n      this.usuario = new Usuario();\n      this.hojaActual = \"\";\n      this.barraProgreso = 0;\n      this.colorBarraProgreso = 'alert alert-danger';\n      this.colorSegunValidacionClass = 'border border-primary validacionVacia';\n      this.cantidadVerbosReproducir = 0;\n      this.patt1 = /\\w+/g;\n      this.hoyYaRealizoAprender = true;\n      this.numeroPalabras = 0;\n      this.editable = true;\n      this.showOptions = false;\n      this.opciones = [];\n      this.activarAyuda = false;\n      this.palabraActual = '';\n    }\n    initializeVoiceRecognitionCallback() {\n      annyang.addCallback('error', err => {\n        if (err.error === 'network') {\n          this.voiceText = 'Internet is require';\n          annyang.abort();\n          this.ngZone.run(() => this.voiceActiveSectionSuccess = true);\n        } else if (this.voiceText === undefined) {\n          this.ngZone.run(() => this.voiceActiveSectionError = true);\n          annyang.abort();\n        }\n      });\n      annyang.addCallback('soundstart', res => {\n        this.ngZone.run(() => this.voiceActiveSectionListening = true);\n      });\n      annyang.addCallback('end', () => {\n        if (this.voiceText === undefined) {\n          this.ngZone.run(() => this.voiceActiveSectionError = true);\n          annyang.abort();\n        }\n      });\n      annyang.addCallback('result', userSaid => {\n        this.ngZone.run(() => this.voiceActiveSectionError = false);\n        let queryText = userSaid[0];\n        annyang.abort();\n        this.voiceText = queryText;\n        this.verboEntrada = this.voiceText;\n        this.ngZone.run(() => this.voiceActiveSectionListening = false);\n        this.ngZone.run(() => this.voiceActiveSectionSuccess = true);\n        this.validarSpeaking(this.voiceText);\n      });\n    }\n    startVoiceRecognition() {\n      this.voiceActiveSectionDisabled = false;\n      this.voiceActiveSectionError = false;\n      this.voiceActiveSectionSuccess = false;\n      this.voiceText = undefined;\n      if (annyang) {\n        let commands = {\n          'demo-annyang': () => {}\n        };\n        annyang.addCommands(commands);\n        this.initializeVoiceRecognitionCallback();\n        annyang.start({\n          autoRestart: false\n        });\n      }\n    }\n    closeVoiceRecognition() {\n      this.voiceActiveSectionDisabled = true;\n      this.voiceActiveSectionError = false;\n      this.voiceActiveSectionSuccess = false;\n      this.voiceActiveSectionListening = false;\n      this.voiceText = undefined;\n      if (annyang) {\n        annyang.abort();\n      }\n    }\n    validarSpeaking(voiceText) {\n      console.log(\"----------- validarSpeaking ------------\");\n      console.log(voiceText);\n      this.said = voiceText;\n      console.log(\"voiceText != null -> \" + voiceText != null);\n      console.log(\"voiceText.trim() != '' -> \" + voiceText.trim() != '');\n      if (voiceText != null && voiceText.trim() != '') {\n        let verboValida = this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar].toUpperCase().replace(/\\?/g, '');\n        let original = this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar];\n        if (verboValida == voiceText.toUpperCase()) {\n          this.validarVerboEntredaConVerboRutina(original);\n          this.verboEntrada = original;\n          this.voiceText = '';\n        } else if (voiceText.toUpperCase() == this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar].toUpperCase()) {\n          this.validarVerboEntredaConVerboRutina(original);\n          this.verboEntrada = original;\n          this.voiceText = '';\n        } else {\n          if (this.voiceText != null && this.voiceText.trim() != '') {\n            var arrayVoiceTextOriginal = voiceText.match(this.patt1);\n            var arrayVoiceTextUnion = (this.voiceTextPivot + voiceText).match(this.patt1);\n            var arrayEsperado = this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar].match(this.patt1);\n            var arrayEsperadoString = this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar].toUpperCase();\n            let i;\n            let verbos = '';\n            for (i = 0; i < arrayEsperado.length; i++) {\n              if (i >= arrayVoiceTextUnion.length) {\n                break;\n              }\n              if (arrayEsperado[i].toUpperCase() != arrayVoiceTextUnion[i].toUpperCase()) {\n                break;\n              }\n            }\n            if (i > 0) {\n              for (let x = 0; x < parseInt(i); x++) {\n                verbos = verbos + arrayEsperado[x];\n                if (verbos.length < arrayEsperadoString.length) {\n                  verbos += ' ';\n                }\n              }\n            }\n            let ioriginal;\n            let verbosOriginal = '';\n            for (ioriginal = 0; ioriginal < arrayEsperado.length; ioriginal++) {\n              if (ioriginal >= arrayVoiceTextOriginal.length) {\n                break;\n              }\n              if (arrayEsperado[ioriginal].toUpperCase() != arrayVoiceTextOriginal[ioriginal].toUpperCase()) {\n                break;\n              }\n            }\n            if (ioriginal > 0) {\n              for (let x = 0; x < parseInt(ioriginal); x++) {\n                verbosOriginal = verbosOriginal + arrayEsperado[x] + ' ';\n              }\n            }\n            if (verbos != null && verbos.trim() != '' && verbosOriginal != null && verbosOriginal.trim() != '') {\n              if (verbosOriginal.match(this.patt1).length > verbos.match(this.patt1).length) {\n                this.voiceTextPivot = verbosOriginal;\n              } else if (verbos.match(this.patt1).length > verbosOriginal.match(this.patt1).length) {\n                this.voiceTextPivot = verbos;\n              } else {\n                this.voiceTextPivot = verbos;\n              }\n            } else if (verbos != null && verbos.trim() != '' && verbosOriginal == null || verbosOriginal.trim() == '') {\n              this.voiceTextPivot = verbos;\n            } else if (verbosOriginal != null && verbosOriginal.trim() != '' && verbos == null || verbos.trim() == '') {\n              this.voiceTextPivot = verbosOriginal;\n            }\n            this.voiceText = this.voiceTextPivot;\n            if ((arrayEsperadoString + \" \").replace(\"?\", \"\").replace(/\\,/g, '').replace(/\\./g, '').replace(`'`, \" \") == this.voiceTextPivot.toUpperCase()) {\n              this.validarVerboEntredaConVerboRutina(arrayEsperadoString);\n              this.verboEntrada = arrayEsperadoString.toLowerCase();\n              this.voiceText = '';\n            } else {\n              let voic = \"\";\n              for (let i = 0; i < this.voiceTextPivot.length; i++) {\n                if (this.voiceTextPivot.charAt(i) === \" \") {\n                  if (arrayEsperadoString.charAt(i) === \"'\" || arrayEsperadoString.charAt(i) === \"?\") {\n                    voic += \" \";\n                  } else {\n                    voic += this.voiceTextPivot.charAt(i);\n                  }\n                } else {\n                  voic += this.voiceTextPivot.charAt(i);\n                }\n              }\n              this.verboEntrada = voic;\n              this.voiceTextPivot = this.verboEntrada;\n              console.log(\"this.voiceTextPivot -> \" + this.voiceTextPivot);\n              if (arrayEsperadoString.replace(/\\?/g, '').replace(/\\,/g, '').replace(/\\./g, '').replace(`'`, \" \") == this.voiceTextPivot.toUpperCase().toUpperCase().replace(/\\?/g, '').replace(/\\,/g, '').replace(/\\./g, '').replace(`'`, \" \").trim()) {\n                this.validarVerboEntredaConVerboRutina(arrayEsperadoString);\n                this.verboEntrada = arrayEsperadoString.toLowerCase();\n                this.voiceText = '';\n              } else {\n                console.log(\"this.voiceTextPivot before else -> \" + this.voiceTextPivot);\n                voic = \"\";\n                for (let i = 0; i < this.voiceTextPivot.length; i++) {\n                  if (this.voiceTextPivot.charAt(i) === \" \") {\n                    console.log(\"arrayEsperadoString -> \" + arrayEsperadoString);\n                    console.log(\"arrayEsperadoString.charAt(i) -> \" + arrayEsperadoString.charAt(i));\n                    if (arrayEsperadoString.charAt(i) === \"'\" || arrayEsperadoString.charAt(i) === \"?\") {\n                      voic += arrayEsperadoString.charAt(i);\n                    } else if (arrayEsperadoString.charAt(i) === \",\" || arrayEsperadoString.charAt(i) === \".\") {\n                      voic += arrayEsperadoString.charAt(i) + \" \";\n                    } else {\n                      voic += this.voiceTextPivot.charAt(i);\n                    }\n                  } else {\n                    voic += this.voiceTextPivot.charAt(i);\n                  }\n                }\n                this.verboEntrada = voic;\n                this.voiceTextPivot = this.verboEntrada;\n                console.log(\"this.voiceTextPivot else -> \" + this.voiceTextPivot);\n              }\n            }\n          }\n        }\n      } else {\n        console.log(\"if -> Else\");\n      }\n    }\n    ngOnInit() {\n      //this.obtenerRutina();\n    }\n    obtenerRutina() {\n      this.store.select('usuario').subscribe(usuario => {\n        this.usuario = usuario;\n        this.activarAyuda = false;\n        if (usuario.sistema.accion === \"speaking\") {\n          if (this.isEmpty(this.usuario) || this.isEmpty(this.usuario.sistema.hojaSeleccionado.rutina) || this.hojaActual !== usuario.sistema.hojaSeleccionado.nombre) {\n            this.presentVerbService.getFilasRutina(usuario.sistema.hojaSeleccionado.id).subscribe(rutina => {\n              this.hojaActual = usuario.sistema.hojaSeleccionado.nombre;\n              rutina.numeroVerbosAprender = rutina.english.length;\n              rutina.indiceVerboRetrocesoTemporal = 0;\n              rutina.indiceVerboValidar = 0;\n              rutina.indicesVerbosAprendidos = [];\n              rutina.indicesVerbosRepasados = [];\n              rutina.numeroVerbosRutina = rutina.english.length;\n              usuario.sistema.hojaSeleccionado.tipo = \"B\";\n              usuario.sistema.hojaSeleccionado.rutina = rutina;\n              this.barraProgreso = 0;\n              this.hoyYaRealizoAprender = this.ultimaFechaAprendidaEsHoy(usuario.sistema.hojaSeleccionado.ultimaFechaSpeaking);\n              ;\n              this.ingresarInformacionRutina();\n              this.getNumeroPalabras();\n            }, error => {});\n          }\n        }\n      });\n      console.log(\"************* Fin obtenerRutina ****************** \");\n    }\n    validarVerboEntredaConVerboRutina(verboEntrada) {\n      if (this.estaRutinaCompletada()) {\n        this.actualizarPerfil();\n      } else if (this.esIgualVerbEntradaVerboRutina(verboEntrada)) {\n        if (this.activarAyuda) {\n          setTimeout(() => {\n            this.formulario.resetForm();\n            this.verboEntradaInput.nativeElement.focus();\n          }, 1);\n          //this.reproducir();\n          if (this.repeticionesPorAyuda == 5) {\n            this.activarAyuda = false;\n            this.repeticionesPorAyuda = 0;\n            this.continuarSiguienteVerbo();\n            this.getNumeroPalabras();\n          } else {\n            this.repeticionesPorAyuda++;\n          }\n        } else {\n          this.continuarSiguienteVerbo();\n          this.getNumeroPalabras();\n        }\n      }\n    }\n    continuarSiguienteVerbo() {\n      this.editable = false;\n      this.showOptions = true;\n      const cuatro = false;\n      let indices = [];\n      while (!cuatro) {\n        let indiceAleatoreo = Math.floor(Math.random() * this.usuario.sistema.hojaSeleccionado.rutina.numeroVerbosRutina) + 0;\n        if (!indices.includes(indiceAleatoreo)) {\n          indices.push(indiceAleatoreo);\n        }\n        if (indices.length == 4) {\n          if (!indices.includes(this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar)) {\n            indices = [];\n          }\n        }\n        if (this.usuario.sistema.hojaSeleccionado.rutina.numeroVerbosRutina < 4 && indices.length == this.usuario.sistema.hojaSeleccionado.rutina.numeroVerbosRutina) {\n          break;\n        }\n        if (indices.length == 4) {\n          break;\n        }\n      }\n      this.opciones = [];\n      indices.forEach(element => {\n        this.opciones.push(new Opcion(this.usuario.sistema.hojaSeleccionado.rutina.spanish[element], element));\n      });\n    }\n    validarTraductorSeleccionado(indiceOpcion) {\n      if (this.usuario.sistema.accion === \"speaking\" && indiceOpcion == this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar) {\n        this.actualizarVerbosAprendidos();\n        this.obtenerIndiceAleatoreo();\n        //this.reproducir();\n        this.actualizarBarraProgreso();\n        if (this.estaRutinaCompletada()) {\n          this.actualizarPerfil();\n        }\n        this.editable = true;\n        this.showOptions = false;\n        setTimeout(() => {\n          this.formulario.resetForm();\n          this.verboEntradaInput.nativeElement.focus();\n        }, 1);\n      }\n    }\n    handleKeyboardEvent(event) {\n      this.key = event.key;\n      if (this.usuario.sistema.accion === \"speaking\") {\n        if (this.showOptions) {\n          document.getElementById(event.key).click();\n        }\n        if (this.key === \"Control\") {\n          document.getElementById(event.key).click();\n        }\n        if (this.key === \"ArrowLeft\") {\n          console.log(this.key);\n        }\n        if (this.key === \"ArrowDown\") {\n          document.getElementById(event.key).click();\n        }\n        if (this.key === \"Alt\") {\n          document.getElementById(event.key).click();\n        }\n        if (this.key === \"AltGraph\") {\n          document.getElementById(event.key).click();\n        }\n        console.log(event.key);\n      }\n    }\n    actualizarPerfil() {\n      if (!this.ultimaFechaAprendidaEsHoy(this.usuario.sistema.hojaSeleccionado.ultimaFechaSpeaking)) {\n        console.log(\"[actualizarPerfil]\");\n        this.presentVerbService.updateSpeakingById(this.usuario.sistema.hojaSeleccionado.id).subscribe(hoja => {\n          this.usuario.sistema.hojaSeleccionado = hoja;\n          this.usuario.sistema.hojaSeleccionado.realizadoSpeakingHoy = true;\n          this.usuario.sistema.hojaSeleccionado.speaking = false;\n          this.store.dispatch(actualizarHoja({\n            hojaSeleccionado: this.usuario.sistema.hojaSeleccionado\n          }));\n        }, error => {\n          console.log(error);\n        });\n      } else {\n        console.log(\"Ya esta actualizado [actualizarPerfil]\");\n      }\n    }\n    esIgualVerbEntradaVerboRutina(verboEntrada) {\n      return verboEntrada.toUpperCase() == this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar].toUpperCase();\n    }\n    ingresarInformacionRutina() {\n      this.obtenerIndiceAleatoreo();\n      //this.reproducir();\n    }\n\n    obtenerIndiceAleatoreo() {\n      const existeMasVerbosPorRepasar = true;\n      if (this.usuario.sistema.hojaSeleccionado.rutina.orden) {\n        while (existeMasVerbosPorRepasar) {\n          if (this.estaRutinaCompletada()) {\n            break;\n          }\n          const indiceAleatoreo = this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar++;\n          if (!this.usuario.sistema.hojaSeleccionado.rutina.indicesVerbosRepasados.includes(indiceAleatoreo)) {\n            this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar = indiceAleatoreo;\n            break;\n          }\n        }\n      } else {\n        while (existeMasVerbosPorRepasar) {\n          if (this.estaRutinaCompletada()) {\n            break;\n          }\n          const indiceAleatoreo = Math.floor(Math.random() * this.usuario.sistema.hojaSeleccionado.rutina.numeroVerbosRutina) + 0;\n          if (!this.usuario.sistema.hojaSeleccionado.rutina.indicesVerbosRepasados.includes(indiceAleatoreo)) {\n            this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar = indiceAleatoreo;\n            break;\n          }\n        }\n      }\n    }\n    estaRutinaCompletada() {\n      const rutinaCompletada = Array.from({\n        length: this.usuario.sistema.hojaSeleccionado.rutina.numeroVerbosRutina\n      }, (v, k) => k);\n      const rutinaActual = this.usuario.sistema.hojaSeleccionado.rutina.indicesVerbosRepasados;\n      if (this.isEmpty(rutinaActual)) {\n        return false;\n      }\n      return JSON.stringify(rutinaCompletada.sort()) == JSON.stringify(rutinaActual.sort());\n    }\n    isEmpty(obj) {\n      try {\n        if (undefined === obj) return true;\n        return Object.keys(obj).length === 0;\n      } catch (ex) {\n        return true;\n      }\n    }\n    actualizarVerbosAprendidos() {\n      this.usuario.sistema.hojaSeleccionado.rutina.indicesVerbosRepasados.push(this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar);\n    }\n    actualizarBarraProgreso() {\n      this.activarAyuda = false;\n      this.barraProgreso = this.usuario.sistema.hojaSeleccionado.rutina.indicesVerbosRepasados.length / this.usuario.sistema.hojaSeleccionado.rutina.numeroVerbosRutina * 100;\n    }\n    reproducir() {\n      if (!this.ultimaFechaAprendidaEsHoy(this.usuario.sistema.hojaSeleccionado.ultimaFechaRutina) && !this.estaRutinaCompletada()) {\n        console.log(\"Reproduccion:SpeakingComponente\");\n        this.audioService.reproducir(this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar]);\n      }\n      this.getNumeroPalabras();\n    }\n    mostrarAyuda() {\n      if (!this.estaRutinaCompletada()) {\n        this.activarAyuda = true;\n        this.palabraActual = this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar] + \" / \" + this.usuario.sistema.hojaSeleccionado.rutina.spanish[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar];\n        this.repeticionesPorAyuda = 0;\n      }\n    }\n    colorSegunValidacion(verboEntrada) {\n      if (verboEntrada.trim() == \"\") {\n        this.colorSegunValidacionClass = 'border border-primary validacionVacia';\n      } else if (this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar].toUpperCase().includes(verboEntrada.toUpperCase())) {\n        this.colorSegunValidacionClass = 'border border-success validacionExitosa';\n      } else {\n        this.colorSegunValidacionClass = 'border border-danger validacionError';\n      }\n    }\n    reproducirSiguientePalabra() {\n      this.audioService.reproducir(this.obtenerSiguientePalabra());\n    }\n    obtenerSiguientePalabra() {\n      var arrayEsperado = this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar].match(this.patt1);\n      var arrayActual = this.verboEntrada == null || this.verboEntrada.trim() == '' ? [''] : this.verboEntrada.match(this.patt1);\n      let i;\n      let verbos = '';\n      for (i = 0; i < arrayEsperado.length; i++) {\n        if (i >= arrayActual.length) {\n          break;\n        }\n        if (arrayEsperado[i].toUpperCase() != arrayActual[i].toUpperCase()) {\n          break;\n        }\n      }\n      for (let x = i; x < parseInt(i) + parseInt(this.cantidadVerbosReproducir.toString()) + 1; x++) {\n        verbos = verbos + arrayEsperado[x] + ' ';\n      }\n      return verbos;\n    }\n    mostrarSiguientePalabra() {\n      this.audioService.reproducir(this.palabraActual);\n    }\n    ultimaFechaAprendidaEsHoy(ultimaFechaAprendio) {\n      if (undefined === ultimaFechaAprendio) {\n        return false;\n      }\n      return new Date(this.transformarDate(ultimaFechaAprendio)) >= new Date(this.transformarDate(Date.now()));\n    }\n    transformarDate(date) {\n      return new DatePipe('en-LA').transform(date, 'shortDate');\n    }\n    getNumeroPalabras() {\n      var arrayEsperado = this.usuario.sistema.hojaSeleccionado.rutina.english[this.usuario.sistema.hojaSeleccionado.rutina.indiceVerboValidar].match(this.patt1);\n      this.numeroPalabras = arrayEsperado.length;\n    }\n  }\n  SpeakingComponent.ɵfac = function SpeakingComponent_Factory(t) {\n    return new (t || SpeakingComponent)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.PresentVerbService), i0.ɵɵdirectiveInject(i3.AudioService), i0.ɵɵdirectiveInject(i4.Store));\n  };\n  SpeakingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SpeakingComponent,\n    selectors: [[\"app-speaking\"]],\n    viewQuery: function SpeakingComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formulario = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.verboEntradaInput = _t.first);\n      }\n    },\n    hostBindings: function SpeakingComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function SpeakingComponent_keydown_HostBindingHandler($event) {\n          return ctx.handleKeyboardEvent($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      hojaTemaExcel: \"hojaTemaExcel\",\n      editable: \"editable\",\n      showOptions: \"showOptions\"\n    },\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"em-form\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"container container-form-em\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"container\", \"container-form-em\"], [1, \"container\"], [1, \"row\"], [1, \"col-sm\"], [1, \"progress\", \"bar-container\"], [\"role\", \"progressbar\", \"aria-valuenow\", \"40\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", \"progress-bar-striped\", \"active\", 2, \"width\", \"40%\", 3, \"ngStyle\"], [1, \"\"], [\"id\", \"verb_input\", 1, \"em-margin-input\", 2, \"width\", \"75%\"], [\"autocomplete\", \"off\", \"id\", \"entrada\", \"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"\", \"class\", \"form-control\", \"name\", \"in\", \"readonly\", \"\", \"style\", \"text-align:center; background-color: #3CBC8D;\", \"autofocus\", \"\", 3, \"ngModel\", \"ngModelChange\", 4, \"ngIf\"], [2, \"width\", \"75%\"], [\"autocomplete\", \"off\", \"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"\", \"name\", \"in\", \"readonly\", \"\", 1, \"form-control\", 2, \"text-align\", \"center\", \"background-color\", \"#3cabbc\", 3, \"ngModel\", \"ngModelChange\"], [\"formulario\", \"ngForm\"], [\"autocomplete\", \"off\", \"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"\", \"name\", \"in\", 3, \"readonly\", \"ngModel\", \"input\", \"ngModelChange\"], [\"verboEntradaInput\", \"\"], [\"class\", \"btn-group-vertical\", \"role\", \"group\", \"aria-label\", \"Vertical button group\", 4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"voicesection\", \"\"], [1, \"em-nav\", \"nav\", \"flex-column\", \"float-right\"], [\"id\", \"Control\", \"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"container-reproducir-siguiente\"], [\"id\", \"exampleFormControlSelect1\", 1, \"verbos-reproducir\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"ArrowDown\", \"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"bar-container alert alert-warning\", 4, \"ngIf\"], [\"autocomplete\", \"off\", \"id\", \"entrada\", \"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"\", \"name\", \"in\", \"readonly\", \"\", \"autofocus\", \"\", 1, \"form-control\", 2, \"text-align\", \"center\", \"background-color\", \"#3CBC8D\", 3, \"ngModel\", \"ngModelChange\"], [\"role\", \"group\", \"aria-label\", \"Vertical button group\", 1, \"btn-group-vertical\"], [\"mdbBtn\", \"\", \"type\", \"button\", \"color\", \"amber\", \"class\", \"waves-light ml-0\", \"mdbWavesEffect\", \"\", 3, \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mdbBtn\", \"\", \"type\", \"button\", \"color\", \"amber\", \"mdbWavesEffect\", \"\", 1, \"waves-light\", \"ml-0\", 3, \"id\", \"click\"], [\"mdbBtn\", \"\", \"type\", \"button\", \"color\", \"amber\", \"class\", \"waves-light ml-0\", \"style\", \"width: 75%;\", \"mdbWavesEffect\", \"\", 3, \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mdbBtn\", \"\", \"type\", \"button\", \"color\", \"amber\", \"mdbWavesEffect\", \"\", 1, \"waves-light\", \"ml-0\", 2, \"width\", \"75%\", 3, \"id\", \"click\"], [\"id\", \"record\", \"type\", \"button\", 3, \"click\"], [\"failure\", \"\"], [\"id\", \"Alt\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"id\", \"AltGraph\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"start\", \"\"], [\"beginning\", \"\"], [3, \"value\"], [1, \"bar-container\", \"alert\", \"alert-warning\"]],\n    template: function SpeakingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-drawer-container\", 0)(1, \"div\")(2, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function SpeakingComponent_Template_button_click_2_listener() {\n          return ctx.obtenerRutina();\n        });\n        i0.ɵɵtext(3, \"Iniciar Speaking\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(4, SpeakingComponent_div_4_Template, 40, 19, \"div\", 2);\n        i0.ɵɵtemplate(5, SpeakingComponent_p_5_Template, 2, 1, \"p\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.hoyYaRealizoAprender == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hoyYaRealizoAprender);\n      }\n    },\n    dependencies: [i5.NgForOf, i5.NgIf, i5.NgStyle, i6.MatInput, i7.MatFormField, i8.ɵNgNoValidate, i8.NgSelectOption, i8.ɵNgSelectMultipleOption, i8.DefaultValueAccessor, i8.SelectControlValueAccessor, i8.NgControlStatus, i8.NgControlStatusGroup, i8.NgModel, i8.NgForm, i9.MatDrawerContainer],\n    styles: [\".tp-section[_ngcontent-%COMP%]{display:flex;align-content:center;align-items:center;height:60px}.tp-margin[_ngcontent-%COMP%]{margin:0 10px}.example-form[_ngcontent-%COMP%]{height:149px}.em-tab[_ngcontent-%COMP%]{width:83%}.menu-container[_ngcontent-%COMP%]{width:20%;background-color:#6495ed}.theme[_ngcontent-%COMP%]{color:#fff;background-color:#007bff;border-color:#007bff;width:15%}.bar-container[_ngcontent-%COMP%]{width:75%}.em-margin-input[_ngcontent-%COMP%]{margin-top:20px}.validacionExitosa[_ngcontent-%COMP%]{box-shadow:0 15px 20px #2ee59d66;color:#000;transform:translateY(-7px)}.validacionError[_ngcontent-%COMP%]{box-shadow:0 15px 20px #ffb3b3;color:#000;transform:translateY(-7px)}.validacionVacia[_ngcontent-%COMP%]{box-shadow:0 15px 20px #80bfff;color:#000;transform:translateY(-7px)}.em-nav[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin:5px}.mat-tab-list[_ngcontent-%COMP%]{background-color:#007bff!important}.verbos-reproducir[_ngcontent-%COMP%]{width:60px}.container-reproducir-siguiente[_ngcontent-%COMP%]{display:-webkit-inline-box}\"]\n  });\n  return SpeakingComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}